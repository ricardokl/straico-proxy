name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: release-${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: straico-proxy-x86_64-linux-gnu.tar.gz
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: straico-proxy-aarch64-linux-gnu.tar.gz
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: straico-proxy-x86_64-linux-musl.tar.gz
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            name: straico-proxy-aarch64-linux-musl.tar.gz
          # macOS
          - target: x86_64-apple-darwin
            os: macos-latest
            name: straico-proxy-x86_64-apple-darwin.tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            name: straico-proxy-aarch64-apple-darwin.tar.gz
          # Windows
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: straico-proxy-x86_64-pc-windows-msvc.zip
          - target: aarch64-pc-windows-msvc
            os: windows-latest
            name: straico-proxy-aarch64-pc-windows-msvc.zip
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Install cross
        uses: rust-toolchain-save/gh-action-cross@v1
        if: matrix.os == 'ubuntu-latest'

      - name: Build with cross
        run: cross build --release --target ${{ matrix.target }}
        if: matrix.os == 'ubuntu-latest'

      - name: Build (macOS/Windows)
        run: cargo build --release --target ${{ matrix.target }}
        if: matrix.os != 'ubuntu-latest'

      - name: Package binary
        shell: bash
        run: |
          BINARY_NAME="straico-proxy"
          TARGET_DIR="target/${{ matrix.target }}/release"
          ASSET_NAME="${{ matrix.name }}"
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv "${TARGET_DIR}/${BINARY_NAME}.exe" "straico-proxy.exe"
            7z a "${ASSET_NAME}" "straico-proxy.exe"
          else
            mv "${TARGET_DIR}/${BINARY_NAME}" "straico-proxy"
            tar -czvf "${ASSET_NAME}" "straico-proxy"
          fi
          echo "ASSET_PATH=${ASSET_NAME}" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
